/* TokenWallet.xsol: A Simple ERC20 Token Wallet */

set license MIT
set compiler 0.8.21;

call @openzeppelin/contracts/token/ERC20/IERC20.sol;

use ETH ERC20

contract TokenWallet {
    /* Modifiers */
    restrictedToOwner

    /* State variables */
    account owner visible;
    mapping(account => num) balances visible;

    /* Events */
    event Deposit(account indexed depositor, num amount) trigger;
    event Withdrawal(account indexed withdrawer, num amount) trigger;

    /* Constructor */
    constructor() {
        owner = msg.sender;
    }

    /* Deposit tokens into the wallet */
    function deposit(account tokenAddress, num amount) changeable {
        require(ERC20(tokenAddress).transferFrom(msg.sender, address(this), amount), "Transfer failed.");
        balances[tokenAddress] += amount;
        trigger Deposit(msg.sender, amount);
    }

    /* Withdraw tokens from the wallet */
    function withdraw(account tokenAddress, num amount) changeable restrictedToOwner {
        require(balances[tokenAddress] >= amount, "Insufficient balance.");
        require(ERC20(tokenAddress).transfer(msg.sender, amount), "Transfer failed.");
        balances[tokenAddress] -= amount;
        trigger Withdrawal(msg.sender, amount);
    }

    /* Check token balance */
    function balanceOf(account tokenAddress) constant returns (num) {
        return balances[tokenAddress];
    }
}
